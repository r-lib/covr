[{"path":[]},{"path":"https://covr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://covr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://covr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://covr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://covr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement james.f.hester@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://covr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://covr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://covr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://covr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://covr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://covr.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://covr.r-lib.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 covr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://covr.r-lib.org/dev/SECURITY.html","id":"reporting-a-vulnerability","dir":"","previous_headings":"","what":"Reporting a Vulnerability","title":"Security Policy","text":"Send email james.f.hester@gmail.com report vulnerability.","code":""},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"How does covr work anyway?","text":"covr package provides framework measuring unit test coverage. Unit testing one cornerstones software development. piece R code can thought software application certain set behaviors. Unit testing means creating examples code behave definition expected output. include normal use, edge cases, expected error cases. Unit testing commonly facilitated frameworks testthat RUnit. Test coverage proportion source code executed running tests. Code coverage consists : instrumenting source code reports run, executing unit test code exercise source code. Measuring code coverage allows developers asses progress quality checking (collaborators) code. Measuring code coverage allows code consumers confidence measures taken package authors verify high code quality. covr provides three functions calculate test coverage. package_coverage() performs coverage calculation R package. (Unit tests must contained \"tests\" directory.) file_coverage() performs coverage calculation one R scripts executing one R scripts. function_coverage() performs coverage calculation single named function, using expression provided. addition providing objective metric test suite extensiveness, often advantageous developers code level view unit tests. interface visually marking code test coverage results allows clear box view unit test suite. clear box view can accessed using online tools local report can generated using report().","code":""},{"path":[]},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"modifying-the-call-tree","dir":"Articles","previous_headings":"Instrumenting R Source Code","what":"Modifying the call tree","title":"How does covr work anyway?","text":"core function covr trace_calls(). function adapted ideas Advanced R - Walking Abstract Syntax Tree recursive functions. recursive function modifies leaves (atomic name objects) R expression applying given function . expression leaf walker function calls recursively elements expression instead. can use framework instead insert trace statement call replacing call call counting function followed previous call. Braces ({) R may seem like language syntax, actually Primitive function can call like function. Remembering braces always return value last evaluated expression, can call counting function followed previous function substituting .call(recurse(x)) function .","code":"identical(x = { 1 + 2; 3 + 4 },     y = `{`(1 + 2, 3 + 4)) ## [1] TRUE `{`(count(), as.call(recurse(x)))"},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"source-references","dir":"Articles","previous_headings":"Instrumenting R Source Code","what":"Source References","title":"How does covr work anyway?","text":"Now way add counting function call Abstract Syntax Tree without changing output need way determine code source function came . Luckily R built-method provide information form source references. option(keep.source = TRUE) (default interactive sessions), reference source code functions stored along function definition. reference used provide original formatting comments given function source. particular call function contains srcref attribute, can used key count just call. actual source trace_calls slightly complicated want initialize counter call walking Abstract Syntax Tree non-calls also want count.","code":""},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"refining-source-references","dir":"Articles","previous_headings":"Instrumenting R Source Code","what":"Refining Source References","title":"How does covr work anyway?","text":"statement comes source reference. Unfortunately, following counted one statement: work around , detailed parse data (obtained refined version getParseData) analyzed impute source references sub-statement level , , switch constructs.","code":"if (x)  y()"},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"replacing-source-in-place","dir":"Articles","previous_headings":"Instrumenting R Source Code","what":"Replacing Source In Place","title":"How does covr work anyway?","text":"modified function definition, re-define function use updated definition, ensure functions call old function also use new definition? might try redefining function directly. work simple case calling new function environment, fails another function calls function different environment. modifying external environments correctly restoring can tricky get correct, use C function reassign_function, also used testthat::with_mock. function takes function name, environment, old definition, new definition copies formals, body, attributes environment old function new function. allows -place replacement given function new function ensure references old function use new definition.","code":"f1 <- function() 1  f1 <- function() 2 f1() == 2 ## [1] TRUE env <- new.env() f1 <- function() 1 env$f2 <- function() f1() + 1  env$f1 <- function() 2  env$f2() == 3 ## [1] FALSE"},{"path":[]},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"s3-classes","dir":"Articles","previous_headings":"Object Orientation","what":"S3 Classes","title":"How does covr work anyway?","text":"R’s S3 object oriented classes simply define functions directly packages namespace, can treated function.","code":""},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"s4-classes","dir":"Articles","previous_headings":"Object Orientation","what":"S4 Classes","title":"How does covr work anyway?","text":"S4 methods complicated implementation S3 classes. function definitions placed enclosing environment based generic method implement. makes getting function definition complicated. replacements_S4 first gets generic functions package environment. generic function finds mangled meta package name gets corresponding environment base environment. functions within environment traced.","code":""},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"reference-classes","dir":"Articles","previous_headings":"Object Orientation","what":"Reference Classes","title":"How does covr work anyway?","text":"Similarly S4 classes reference classes (RC) define methods special environment. similar method used add tracing calls class definition. calls copied object methods generator function run.","code":""},{"path":[]},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"gcov","dir":"Articles","previous_headings":"Compiled code","what":"Gcov","title":"How does covr work anyway?","text":"Test coverage compiled code uses completely different mechanism R code. Fortunately can take advantage Gcov, built-coverage tool gcc compatible reports clang versions 3.5 greater. compilers track execution coverage given --coverage flag. addition necessary turn compiler optimization -O0, otherwise coverage output difficult impossible interpret multiple lines can optimized one, functions can inlined, etc.","code":""},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"makevars","dir":"Articles","previous_headings":"Compiled code","what":"Makevars","title":"How does covr work anyway?","text":"R passes flags defined PKG_CFLAGS compiler, however also default flags including -02 (defined $R_HOME/etc/Makeconf), need overridden. Unfortunately possible override default flags environment variables (new flags added left defaults rather right). However Make variables defined ~/.R/Makevars used place defaults. Therefore, need temporarily add -O0 --coverage Makevars file, restore previous state coverage run.","code":""},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"subprocess","dir":"Articles","previous_headings":"Compiled code","what":"Subprocess","title":"How does covr work anyway?","text":"last hurdle getting compiled code coverage working properly coverage output produced running process ends. Therefore run tests get results R process. covr runs separate R process running tests. However need modify package code first running tests. covr installs package tested temporary directory. Next, calls made lazy loading code installs user hook modify code loaded. also register finalizer prints coverage counts namespace unloaded R process exits. output files aggregated together determine coverage. procedure works regardless number child R processes used, therefore also works parallel code.","code":""},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"output-formats","dir":"Articles","previous_headings":"","what":"Output Formats","title":"How does covr work anyway?","text":"output format returned covr R object class “coverage” containing information gathered executing test suite. consists named list, names colon-delimited information source references (file, line columns traced call ). value number times given expression called source ref original call. .data.frame method available make subsetting various features easy . covr tracks coverage expression, typically users expect coverage reported line, functions convert line oriented coverage.","code":"# an object to analyze f1 <- function(x) { x + 1 } # get results with no unit tests c1 <- function_coverage(fun = f1, code = NULL) c1 # get results with unit tests c2 <- function_coverage(fun = f1, code = f1(x = 1) == 2) c2"},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"codecov-io-and-coveralls-io","dir":"Articles","previous_headings":"","what":"Codecov.io and Coveralls.io","title":"How does covr work anyway?","text":"Codecov Coveralls web services help track code coverage time, ensure new code appropriately covered. JSON-based APIs submit report coverage. functions codecov coveralls create outputs can consumed services.","code":""},{"path":[]},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"overview","dir":"Articles","previous_headings":"Prior Art","what":"Overview","title":"How does covr work anyway?","text":"Prior writing covr, handful coverage tools R code. R-coverage Karl Forner testCoverage Tom Taverner, Chris Campbell & Suchen Jin.","code":""},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"r-coverage","dir":"Articles","previous_headings":"Prior Art","what":"R-coverage","title":"How does covr work anyway?","text":"R-coverage provides robust solution modifying R source code instrument code call. Unfortunately requires patch source R application . Getting changes incorporated core R distribution likely challenging.","code":""},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"test-coverage","dir":"Articles","previous_headings":"Prior Art","what":"Test Coverage","title":"How does covr work anyway?","text":"testCoverage uses getParseData, R’s alternate parser (3.0) analyse R source code. package replaces symbols code tested unique identifier. injected tracing function report time symbol called. first symbol level expression tree traced, allowing coverage code branches checked. complicated implementation fully understand, one reasons decided write covr.","code":""},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"covr","dir":"Articles","previous_headings":"Prior Art","what":"Covr","title":"How does covr work anyway?","text":"covr takes approach -two previous tools. Function definitions modified parsing abstract syntax tree inserting trace statements. modified definitions transparently replaced -place using C. allows us correctly instrument every call function package without resort alternate parsing changes R source.","code":""},{"path":"https://covr.r-lib.org/dev/articles/how_it_works.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"How does covr work anyway?","text":"covr provides accessible framework ease communication R unit test suites. covr can integrated continuous integration services R developers working larger projects, part multi-disciplinary teams. covr aims simple use make writing high quality code part every R user’s routine.","code":""},{"path":"https://covr.r-lib.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jim Hester. Author, maintainer. Willem Ligtenberg. Contributor. Kirill Müller. Contributor. Henrik Bengtsson. Contributor. Steve Peak. Contributor. Kirill Sevastyanenko. Contributor. Jon Clayden. Contributor. Robert Flight. Contributor. Eric Brown. Contributor. Brodie Gaslam. Contributor. Beasley. Contributor. Robert Krzyzanowski. Contributor. Markus Wamser. Contributor. Karl Forner. Contributor. Gergely Daróczi. Contributor. Jouni Helske. Contributor. Kun Ren. Contributor. Jeroen Ooms. Contributor. Ken Williams. Contributor. Chris Campbell. Contributor. David Hugh-Jones. Contributor. Qin Wang. Contributor. Doug Kelkhoff. Contributor. Ivan Sagalaev. Contributor, copyright holder.           highlight.js library Mark Otto. Contributor.           Bootstrap library Jacob Thornton. Contributor.           Bootstrap library Bootstrap contributors. Contributor.           Bootstrap library Twitter, Inc. Copyright holder.           Bootstrap library","code":""},{"path":"https://covr.r-lib.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hester J (2025). covr: Test Coverage Packages. R package version 3.6.4.9004, https://github.com/r-lib/covr, https://covr.r-lib.org.","code":"@Manual{,   title = {covr: Test Coverage for Packages},   author = {Jim Hester},   year = {2025},   note = {R package version 3.6.4.9004, https://github.com/r-lib/covr},   url = {https://covr.r-lib.org}, }"},{"path":"https://covr.r-lib.org/dev/index.html","id":"covr-","dir":"","previous_headings":"","what":"Test Coverage for Packages","title":"Test Coverage for Packages","text":"Track test coverage R package view reports locally (optionally) upload results codecov coveralls.","code":""},{"path":"https://covr.r-lib.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Test Coverage for Packages","text":"easiest way setup covr Github Actions usethis.","code":"install.packages(\"covr\")  # For devel version devtools::install_github(\"r-lib/covr\") usethis::use_github_action(\"test-coverage\")"},{"path":"https://covr.r-lib.org/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Test Coverage for Packages","text":"local development coverage report can used inspect coverage line package. Note requires DT package installed. covr also defines RStudio Addin, runs report() active project. can used via Addin menu binding action shortcut, e.g. Ctrl-Shift-C.","code":"library(covr)  # If run with no arguments implicitly calls `package_coverage()` report()"},{"path":"https://covr.r-lib.org/dev/index.html","id":"interactively","dir":"","previous_headings":"","what":"Interactively","title":"Test Coverage for Packages","text":"","code":"# If run with the working directory within the package source. package_coverage()  # or a package in another directory cov <- package_coverage(\"/dir/lintr\")  # view results as a data.frame as.data.frame(cov)  # zero_coverage() shows only uncovered lines. # If run within RStudio, `zero_coverage()` will open a marker pane with the # uncovered lines. zero_coverage(cov)"},{"path":"https://covr.r-lib.org/dev/index.html","id":"exclusions","dir":"","previous_headings":"","what":"Exclusions","title":"Test Coverage for Packages","text":"covr supports different ways excluding file.","code":""},{"path":"https://covr.r-lib.org/dev/index.html","id":"covrignore-file","dir":"","previous_headings":"","what":".covrignore file","title":"Test Coverage for Packages","text":".covrignore file located package’s root directory can used exclude files directories. lines .covrignore file interpreted list file globs ignore. uses globbing rules Sys.glob(). directories listed ignore files directory. Alternative locations file can set environment variable COVR_COVRIGNORE R option covr.covrignore. .covrignore file added .RBuildignore file unless want distribute package. can added inst/.covrignore instead.","code":""},{"path":"https://covr.r-lib.org/dev/index.html","id":"function-exclusions","dir":"","previous_headings":"","what":"Function Exclusions","title":"Test Coverage for Packages","text":"function_exclusions argument package_coverage() can used exclude functions name. argument takes vector regular expressions matching functions exclude.","code":"# exclude print functions package_coverage(function_exclusions = \"print\\\\.\")  # exclude `.onLoad` function package_coverage(function_exclusions = \"\\\\.onLoad\")"},{"path":"https://covr.r-lib.org/dev/index.html","id":"line-exclusions","dir":"","previous_headings":"","what":"Line Exclusions","title":"Test Coverage for Packages","text":"line_exclusions argument package_coverage() can used exclude file. argument takes list filenames named ranges exclude.","code":"# exclude whole file of R/test.R package_coverage(line_exclusions = \"R/test.R\")  # exclude lines 1 to 10 and 15 from R/test.R package_coverage(line_exclusions = list(\"R/test.R\" = c(1:10, 15)))  # exclude lines 1 to 10 from R/test.R, all of R/test2.R package_coverage(line_exclusions = list(\"R/test.R\" = c(1, 10), \"R/test2.R\"))"},{"path":"https://covr.r-lib.org/dev/index.html","id":"exclusion-comments","dir":"","previous_headings":"","what":"Exclusion Comments","title":"Test Coverage for Packages","text":"addition can exclude lines coverage putting special comments source code. can done per line. specifying range start end. patterns used can specified setting global options covr.exclude_pattern, covr.exclude_start, covr.exclude_end. NB: pattern applies exclusions src folder, skipped lines , e.g., C code (comments can start //) look like // # nocov.","code":"f1 <- function(x) {   x + 1 # nocov } f2 <- function(x) { # nocov start   x + 2 } # nocov end"},{"path":[]},{"path":"https://covr.r-lib.org/dev/index.html","id":"will-covr-work-with-testthat-runit-etc","dir":"","previous_headings":"","what":"Will covr work with testthat, RUnit, etc…","title":"Test Coverage for Packages","text":"Covr compatible testing package, uses tools::testInstalledPackage() run packages tests.","code":""},{"path":"https://covr.r-lib.org/dev/index.html","id":"will-covr-work-with-alternative-compilers-such-as-icc","dir":"","previous_headings":"","what":"Will covr work with alternative compilers such as ICC","title":"Test Coverage for Packages","text":"Covr now supports Intel’s icc compiler, thanks work contributed Qin Wang Oracle. Covr known work clang versions 3.5+ gcc version 4.2+. appropriate gcov version path can set appropriate location covr.gcov options. set path “” turn coverage compiled code.","code":"options(covr.gcov = \"path/to/gcov\")"},{"path":"https://covr.r-lib.org/dev/index.html","id":"how-does-covr-work","dir":"","previous_headings":"","what":"How does covr work?","title":"Test Coverage for Packages","text":"covr tracks test coverage modifying package’s code add tracking calls call. vignette vignettes/how_it_works.Rmd contains detailed explanation technique rationale behind . can view vignette within R using","code":"vignette(\"how_it_works\", package = \"covr\")"},{"path":"https://covr.r-lib.org/dev/index.html","id":"why-cant-covr-run-during-r-cmd-check","dir":"","previous_headings":"","what":"Why can’t covr run during R CMD check","title":"Test Coverage for Packages","text":"covr modifies package code possible unknown edge cases modification affects output. addition tracking coverage compiled code covr compiles package without optimization, can modify behavior (usually due package bugs masked higher optimization levels).","code":""},{"path":"https://covr.r-lib.org/dev/index.html","id":"alternative-coverage-tools","dir":"","previous_headings":"","what":"Alternative Coverage Tools","title":"Test Coverage for Packages","text":"https://github.com/MangoTheCat/testCoverage (longer supported) R-coverage (longer supported)","code":""},{"path":"https://covr.r-lib.org/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Test Coverage for Packages","text":"Please note covr project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://covr.r-lib.org/dev/reference/as_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a counters object to a coverage object — as_coverage","title":"Convert a counters object to a coverage object — as_coverage","text":"Convert counters object coverage object","code":""},{"path":"https://covr.r-lib.org/dev/reference/as_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a counters object to a coverage object — as_coverage","text":"","code":"as_coverage(counters = NULL, ...)"},{"path":"https://covr.r-lib.org/dev/reference/as_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a counters object to a coverage object — as_coverage","text":"counters environment covr trace results convert coverage object. counters provided, covr namespace value .counters used. ... Additional attributes include coverage object.","code":""},{"path":"https://covr.r-lib.org/dev/reference/as_coverage_with_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and restructure counter tests for a coverage object — as_coverage_with_tests","title":"Clean and restructure counter tests for a coverage object — as_coverage_with_tests","text":"tests produced options(covr.record_tests), prune unused records $tests$tally matrices trace get rid wrapping $tests environment (reassigning value $tests$tally)","code":""},{"path":"https://covr.r-lib.org/dev/reference/as_coverage_with_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and restructure counter tests for a coverage object — as_coverage_with_tests","text":"","code":"as_coverage_with_tests(counters)"},{"path":"https://covr.r-lib.org/dev/reference/as_coverage_with_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and restructure counter tests for a coverage object — as_coverage_with_tests","text":"counters environment covr trace results convert coverage object. counters provided, covr namespace value .counters used.","code":""},{"path":"https://covr.r-lib.org/dev/reference/azure.html","id":null,"dir":"Reference","previous_headings":"","what":"Run covr on a package and output the result so it is available on Azure Pipelines — azure","title":"Run covr on a package and output the result so it is available on Azure Pipelines — azure","text":"Run covr package output result available Azure Pipelines","code":""},{"path":"https://covr.r-lib.org/dev/reference/azure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run covr on a package and output the result so it is available on Azure Pipelines — azure","text":"","code":"azure(   ...,   coverage = package_coverage(..., quiet = quiet),   filename = \"coverage.xml\",   quiet = TRUE )"},{"path":"https://covr.r-lib.org/dev/reference/azure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run covr on a package and output the result so it is available on Azure Pipelines — azure","text":"... arguments passed package_coverage() coverage existing coverage object submit, NULL, package_coverage() called arguments ... filename name Cobertura XML file quiet FALSE, print coverage submission.","code":""},{"path":"https://covr.r-lib.org/dev/reference/clear_counters.html","id":null,"dir":"Reference","previous_headings":"","what":"clear all previous counters — clear_counters","title":"clear all previous counters — clear_counters","text":"clear previous counters","code":""},{"path":"https://covr.r-lib.org/dev/reference/clear_counters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clear all previous counters — clear_counters","text":"","code":"clear_counters()"},{"path":"https://covr.r-lib.org/dev/reference/code_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate coverage of code directly — code_coverage","title":"Calculate coverage of code directly — code_coverage","text":"function useful testing, thin wrapper around file_coverage() parseData populated properly unless functions defined file.","code":""},{"path":"https://covr.r-lib.org/dev/reference/code_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate coverage of code directly — code_coverage","text":"","code":"code_coverage(   source_code,   test_code,   line_exclusions = NULL,   function_exclusions = NULL,   ... )"},{"path":"https://covr.r-lib.org/dev/reference/code_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate coverage of code directly — code_coverage","text":"source_code character vector source code test_code character vector test code line_exclusions named list files lines exclude file. function_exclusions vector regular expressions matching function names exclude. Example print\\\\\\. match print methods. ... Additional arguments passed file_coverage()","code":""},{"path":"https://covr.r-lib.org/dev/reference/code_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate coverage of code directly — code_coverage","text":"","code":"source <- \"add <- function(x, y) { x + y }\" test <- \"add(1, 2) == 3\" code_coverage(source, test) #> Coverage: 100.00% #> /tmp/RtmpJ8ZeH0/source.R1e9b548f18d: 100.00%"},{"path":"https://covr.r-lib.org/dev/reference/codecov.html","id":null,"dir":"Reference","previous_headings":"","what":"Run covr on a package and upload the result to codecov.io — codecov","title":"Run covr on a package and upload the result to codecov.io — codecov","text":"Run covr package upload result codecov.io","code":""},{"path":"https://covr.r-lib.org/dev/reference/codecov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run covr on a package and upload the result to codecov.io — codecov","text":"","code":"codecov(   ...,   coverage = NULL,   base_url = \"https://codecov.io\",   token = NULL,   commit = NULL,   branch = NULL,   pr = NULL,   flags = NULL,   quiet = TRUE )"},{"path":"https://covr.r-lib.org/dev/reference/codecov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run covr on a package and upload the result to codecov.io — codecov","text":"... arguments passed package_coverage() coverage existing coverage object submit, NULL, package_coverage() called arguments ... base_url Codecov url (change Enterprise) token codecov upload token, NULL following external sources checked order: environment variable ‘CODECOV_TOKEN’. empty, package look directory package file codecov.yml. File must codecov section field token set token used. commit explicitly set commit coverage result object corresponds . looked service locally NULL. branch explicitly set branch coverage result object corresponds , looked service locally NULL. pr explicitly set pr coverage result object corresponds , looked service NULL. flags flag use coverage upload see https://docs.codecov.com/docs/flags details. quiet FALSE, print coverage submission.","code":""},{"path":"https://covr.r-lib.org/dev/reference/codecov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run covr on a package and upload the result to codecov.io — codecov","text":"","code":"if (FALSE) { # \\dontrun{ codecov(path = \"test\") } # }"},{"path":"https://covr.r-lib.org/dev/reference/count.html","id":null,"dir":"Reference","previous_headings":"","what":"increment a given counter — count","title":"increment a given counter — count","text":"increment given counter","code":""},{"path":"https://covr.r-lib.org/dev/reference/count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"increment a given counter — count","text":"","code":"count(key)"},{"path":"https://covr.r-lib.org/dev/reference/count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"increment a given counter — count","text":"key generated key()","code":""},{"path":"https://covr.r-lib.org/dev/reference/count_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Append a test trace to a counter, updating global current test — count_test","title":"Append a test trace to a counter, updating global current test — count_test","text":"Append test trace counter, updating global current test","code":""},{"path":"https://covr.r-lib.org/dev/reference/count_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append a test trace to a counter, updating global current test — count_test","text":"","code":"count_test(key)"},{"path":"https://covr.r-lib.org/dev/reference/count_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append a test trace to a counter, updating global current test — count_test","text":"key generated key()","code":""},{"path":"https://covr.r-lib.org/dev/reference/coverage_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a coverage dataset to a list — coverage_to_list","title":"Convert a coverage dataset to a list — coverage_to_list","text":"Convert coverage dataset list","code":""},{"path":"https://covr.r-lib.org/dev/reference/coverage_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a coverage dataset to a list — coverage_to_list","text":"","code":"coverage_to_list(x = package_coverage())"},{"path":"https://covr.r-lib.org/dev/reference/coverage_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a coverage dataset to a list — coverage_to_list","text":"x coverage dataset, defaults running package_coverage().","code":""},{"path":"https://covr.r-lib.org/dev/reference/coverage_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a coverage dataset to a list — coverage_to_list","text":"list containing coverage result individual file whole package","code":""},{"path":"https://covr.r-lib.org/dev/reference/coveralls.html","id":null,"dir":"Reference","previous_headings":"","what":"Run covr on a package and upload the result to coveralls — coveralls","title":"Run covr on a package and upload the result to coveralls — coveralls","text":"Run covr package upload result coveralls","code":""},{"path":"https://covr.r-lib.org/dev/reference/coveralls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run covr on a package and upload the result to coveralls — coveralls","text":"","code":"coveralls(   ...,   coverage = NULL,   repo_token = Sys.getenv(\"COVERALLS_TOKEN\"),   service_name = Sys.getenv(\"CI_NAME\", \"travis-ci\"),   quiet = TRUE )"},{"path":"https://covr.r-lib.org/dev/reference/coveralls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run covr on a package and upload the result to coveralls — coveralls","text":"... arguments passed package_coverage() coverage existing coverage object submit, NULL, package_coverage() called arguments ... repo_token secret repo token repository, found bottom repository's page Coveralls. useful job running service Coveralls support ---box. set NULL, assumed job running travis-ci service_name CI service use, environment variable ‘CI_NAME’ set used, otherwise ‘travis-ci’ used. quiet FALSE, print coverage submission.","code":""},{"path":"https://covr.r-lib.org/dev/reference/covr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"covr: Test coverage for packages — covr-package","title":"covr: Test coverage for packages — covr-package","text":"covr tracks reports code coverage package (optionally) upload results coverage service like 'Codecov' https://.codecov.io 'Coveralls' https://coveralls.io. Code coverage measure amount code exercised set tests. indirect measure test quality completeness. package compatible testing methodology framework tracks coverage R code compiled C/C++/FORTRAN code.","code":""},{"path":"https://covr.r-lib.org/dev/reference/covr-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"covr: Test coverage for packages — covr-package","text":"coverage report can used inspect coverage line package. Using report() requires additional dependencies DT htmltools.","code":"# If run with no arguments `report()` implicitly calls `package_coverage()` report()"},{"path":"https://covr.r-lib.org/dev/reference/covr-package.html","id":"package-options","dir":"Reference","previous_headings":"","what":"Package options","title":"covr: Test coverage for packages — covr-package","text":"covr uses following options() configure behaviour: covr.covrignore: filename use ignore file, listing glob-style wildcarded paths files ignore coverage calculations. Defaults value environment variable COVR_COVRIGNORE, \".covrignore\"  neither option environment variable set. covr.exclude_end: Used along covr.exclude_start, optional regular expression ends line-exclusion region. details, see ?exclusions. covr.exclude_pattern: optional line-exclusion pattern. Lines match pattern excluded coverage. details, see ?exclusions. covr.exclude_start: Used along covr.exclude_end, optional regular expression starts line-exclusion region. details, see ?exclusions. covr.filter_non_package: TRUE (default behavior), coverage files outside target package filtered coverage output. covr.fix_parallel_mcexit: covr.flags: covr.gcov: appropriate gcov version path can use option set appropriate location. set \"\" turn coverage compiled code. covr.gcov_additional_paths: covr.gcov_args: covr.icov: covr.icov_args: covr.icov_flags: covr.icov_prof: covr.rstudio_source_markers: logical value. TRUE (default behavior), source markers displayed within RStudio IDE using zero_coverage. covr.record_tests: TRUE (default NULL), record listing top level test expressions associate tests covr traces evaluated test's execution. details, see ?covr.record_tests. covr.showCfunctions:","code":""},{"path":[]},{"path":"https://covr.r-lib.org/dev/reference/covr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"covr: Test coverage for packages — covr-package","text":"Maintainer: Jim Hester james.f.hester@gmail.com contributors: Willem Ligtenberg [contributor] Kirill Müller [contributor] Henrik Bengtsson [contributor] Steve Peak [contributor] Kirill Sevastyanenko [contributor] Jon Clayden [contributor] Robert Flight [contributor] Eric Brown [contributor] Brodie Gaslam [contributor] Beasley [contributor] Robert Krzyzanowski [contributor] Markus Wamser [contributor] Karl Forner [contributor] Gergely Daróczi [contributor] Jouni Helske [contributor] Kun Ren [contributor] Jeroen Ooms [contributor] Ken Williams [contributor] Chris Campbell [contributor] David Hugh-Jones [contributor] Qin Wang [contributor] Doug Kelkhoff [contributor] Ivan Sagalaev (highlight.js library) [contributor, copyright holder] Mark Otto (Bootstrap library) [contributor] Jacob Thornton (Bootstrap library) [contributor] Bootstrap contributors (Bootstrap library) [contributor] Twitter, Inc (Bootstrap library) [copyright holder]","code":""},{"path":"https://covr.r-lib.org/dev/reference/covr.record_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Record Test Traces During Coverage Execution — covr.record_tests","title":"Record Test Traces During Coverage Execution — covr.record_tests","text":"setting options(covr.record_tests = TRUE), result covr coverage collection functions include additional data pertaining tests executed index tests, stack depth, trigger execution trace.","code":""},{"path":"https://covr.r-lib.org/dev/reference/covr.record_tests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Record Test Traces During Coverage Execution — covr.record_tests","text":"functionality requires package code tests installed sourced source. details, refer R options, keep.source, keep.source.pkgs keep.parse.data.pkgs.","code":""},{"path":"https://covr.r-lib.org/dev/reference/covr.record_tests.html","id":"additional-fields","dir":"Reference","previous_headings":"","what":"Additional fields","title":"Record Test Traces During Coverage Execution — covr.record_tests","text":"Within covr result, can explore information two places: attr(,\"tests\"): list call stacks, results target code execution. $<srcref>$tests: srcref count coverage object, $tests field now included contains matrix three columns, \"test\", \"call\", \"depth\" \"\" specify test number (corresponding index test attr(,\"tests\"), number times test expression evaluated produce trace hit, stack depth target code trace executed, order execution test.","code":""},{"path":"https://covr.r-lib.org/dev/reference/covr.record_tests.html","id":"test-traces","dir":"Reference","previous_headings":"","what":"Test traces","title":"Record Test Traces During Coverage Execution — covr.record_tests","text":"content test traces dependent unit testing framework used target package. behavior contingent available information sources kept testing files. Test traces extracted following criteria: srcref files provided file within covr's temporary library, calls files kept test trace. collect traces tests run common testing frameworks testthat RUnit. Otherwise, conservative fallback situations source references found, none within temporary directory, entire call stack collected. calls subsequently subset call covr's internal count function, always include last call call stack prior call count.","code":""},{"path":"https://covr.r-lib.org/dev/reference/covr.record_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Record Test Traces During Coverage Execution — covr.record_tests","text":"","code":"fcode <- ' f <- function(x) {   if (x)     f(!x)   else     FALSE }'  options(covr.record_tests = TRUE) cov <- code_coverage(fcode, \"f(TRUE)\")  # extract executed test code for the first test tail(attr(cov, \"tests\")[[1L]], 1L) #> [[1]] #> f(TRUE) #>  # [[1]] # f(TRUE)  # extract test itemization per trace cov[[3]][c(\"srcref\", \"tests\")] #> $srcref #> FALSE #>  #> $tests #>      test call depth i #> [1,]    1    1     2 4 #>  # $srcref # f(!x) # # $tests #      test call depth i # [1,]    1    1     2 4  # reconstruct the code path of a test by ordering test traces by [,\"i\"] lapply(cov, `[[`, \"tests\") #> $`source.R1e9b5e9e001c:4:5:4:9:5:9:4:4` #>      test call depth i #> [1,]    1    1     1 2 #>  #> $`source.R1e9b5e9e001c:3:7:3:7:7:7:3:3` #>      test call depth i #> [1,]    1    1     1 1 #> [2,]    1    1     2 3 #>  #> $`source.R1e9b5e9e001c:6:5:6:9:5:9:6:6` #>      test call depth i #> [1,]    1    1     2 4 #>  # $`source.Ref2326138c55:4:6:4:10:6:10:4:4` #      test call depth i # [1,]    1    1     1 2 # # $`source.Ref2326138c55:3:8:3:8:8:8:3:3` #      test call depth i # [1,]    1    1     1 1 # [2,]    1    1     2 3 # # $`source.Ref2326138c55:6:6:6:10:6:10:6:6` #      test call depth i # [1,]    1    1     2 4"},{"path":"https://covr.r-lib.org/dev/reference/current_test_call_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the number of times the test call was called — current_test_call_count","title":"Retrieve the number of times the test call was called — current_test_call_count","text":"single test expression might evaluated many times. time expression called, call count incremented.","code":""},{"path":"https://covr.r-lib.org/dev/reference/current_test_call_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the number of times the test call was called — current_test_call_count","text":"","code":"current_test_call_count()"},{"path":"https://covr.r-lib.org/dev/reference/current_test_call_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the number of times the test call was called — current_test_call_count","text":"integer value representing number calls current call package testing suite.","code":""},{"path":"https://covr.r-lib.org/dev/reference/current_test_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the index for the test in .counters$tests — current_test_index","title":"Retrieve the index for the test in .counters$tests — current_test_index","text":"test encountered , index index test logged tests list. Otherwise, index next index beyond length tests list.","code":""},{"path":"https://covr.r-lib.org/dev/reference/current_test_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the index for the test in .counters$tests — current_test_index","text":"","code":"current_test_index()"},{"path":"https://covr.r-lib.org/dev/reference/current_test_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the index for the test in .counters$tests — current_test_index","text":"integer index test call","code":""},{"path":"https://covr.r-lib.org/dev/reference/current_test_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Build key for the current test — current_test_key","title":"Build key for the current test — current_test_key","text":"current test srcref, unique character key built srcref. Otherwise, empty string returned.","code":""},{"path":"https://covr.r-lib.org/dev/reference/current_test_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build key for the current test — current_test_key","text":"","code":"current_test_key()"},{"path":"https://covr.r-lib.org/dev/reference/current_test_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build key for the current test — current_test_key","text":"unique character string test call srcref, empty string otherwise.","code":""},{"path":"https://covr.r-lib.org/dev/reference/display_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the path name (filename) for each coverage object — display_name","title":"Retrieve the path name (filename) for each coverage object — display_name","text":"Retrieve path name (filename) coverage object","code":""},{"path":"https://covr.r-lib.org/dev/reference/display_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the path name (filename) for each coverage object — display_name","text":"","code":"display_name(x)"},{"path":"https://covr.r-lib.org/dev/reference/display_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the path name (filename) for each coverage object — display_name","text":"x coverage object","code":""},{"path":"https://covr.r-lib.org/dev/reference/environment_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate coverage of an environment — environment_coverage","title":"Calculate coverage of an environment — environment_coverage","text":"Calculate coverage environment","code":""},{"path":"https://covr.r-lib.org/dev/reference/environment_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate coverage of an environment — environment_coverage","text":"","code":"environment_coverage(   env = parent.frame(),   test_files,   line_exclusions = NULL,   function_exclusions = NULL )"},{"path":"https://covr.r-lib.org/dev/reference/environment_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate coverage of an environment — environment_coverage","text":"env environment instrumented. test_files Character vector test files code test functions line_exclusions named list files lines exclude file. function_exclusions vector regular expressions matching function names exclude. Example print\\\\\\. match print methods.","code":""},{"path":"https://covr.r-lib.org/dev/reference/exclusions.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclusions — exclusions","title":"Exclusions — exclusions","text":"covr supports couple different ways excluding file.","code":""},{"path":"https://covr.r-lib.org/dev/reference/exclusions.html","id":"line-exclusions","dir":"Reference","previous_headings":"","what":"Line Exclusions","title":"Exclusions — exclusions","text":"line_exclusions argument package_coverage() can used exclude file.  argument takes list filenames named ranges exclude.","code":""},{"path":"https://covr.r-lib.org/dev/reference/exclusions.html","id":"function-exclusions","dir":"Reference","previous_headings":"","what":"Function Exclusions","title":"Exclusions — exclusions","text":"Alternatively function_exclusions can used exclude R functions based regular expression(s). example print\\\\\\.* can used exclude print methods defined package coverage.","code":""},{"path":"https://covr.r-lib.org/dev/reference/exclusions.html","id":"exclusion-comments","dir":"Reference","previous_headings":"","what":"Exclusion Comments","title":"Exclusions — exclusions","text":"addition can exclude lines coverage putting special comments source code. can done per line specifying range. patterns used can specified exclude_pattern, exclude_start, exclude_end arguments package_coverage() setting global options covr.exclude_pattern, covr.exclude_start, covr.exclude_end.","code":""},{"path":"https://covr.r-lib.org/dev/reference/exclusions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exclusions — exclusions","text":"","code":"if (FALSE) { # \\dontrun{ # exclude whole file of R/test.R package_coverage(exclusions = \"R/test.R\")  # exclude lines 1 to 10 and 15 from R/test.R package_coverage(line_exclusions = list(\"R/test.R\" = c(1:10, 15)))  # exclude lines 1 to 10 from R/test.R, all of R/test2.R package_coverage(line_exclusions = list(\"R/test.R\" = 1:10, \"R/test2.R\"))  # exclude all print and format methods from the package. package_coverage(function_exclusions = c(\"print\\\\.\", \"format\\\\.\"))  # single line exclusions f1 <- function(x) {   x + 1 # nocov }  # ranged exclusions f2 <- function(x) { # nocov start   x + 2 } # nocov end } # }"},{"path":"https://covr.r-lib.org/dev/reference/file_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate test coverage for sets of files — file_coverage","title":"Calculate test coverage for sets of files — file_coverage","text":"files source_files first sourced new environment define functions checked. instrumented track coverage files test_files sourced.","code":""},{"path":"https://covr.r-lib.org/dev/reference/file_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate test coverage for sets of files — file_coverage","text":"","code":"file_coverage(   source_files,   test_files,   line_exclusions = NULL,   function_exclusions = NULL,   parent_env = parent.frame() )"},{"path":"https://covr.r-lib.org/dev/reference/file_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate test coverage for sets of files — file_coverage","text":"source_files Character vector source files function definitions measure coverage test_files Character vector test files code test functions line_exclusions named list files lines exclude file. function_exclusions vector regular expressions matching function names exclude. Example print\\\\\\. match print methods. parent_env parent environment use sourcing files.","code":""},{"path":"https://covr.r-lib.org/dev/reference/file_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate test coverage for sets of files — file_coverage","text":"","code":"# For the purpose of this example, save code containing code and tests to files cat(\"add <- function(x, y) { x + y }\", file=\"add.R\") cat(\"add(1, 2) == 3\", file=\"add_test.R\")  # Use file_coverage() to calculate test coverage file_coverage(source_files = \"add.R\", test_files = \"add_test.R\") #> Coverage: 100.00% #> add.R: 100.00%  # cleanup file.remove(c(\"add.R\", \"add_test.R\")) #> [1] TRUE TRUE"},{"path":"https://covr.r-lib.org/dev/reference/file_report.html","id":null,"dir":"Reference","previous_headings":"","what":"A coverage report for a specific file — file_report","title":"A coverage report for a specific file — file_report","text":"coverage report specific file","code":""},{"path":"https://covr.r-lib.org/dev/reference/file_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A coverage report for a specific file — file_report","text":"","code":"file_report(   x = package_coverage(),   file = NULL,   out_file = file.path(tempdir(), paste0(get_package_name(x), \"-file-report.html\")),   browse = interactive() )"},{"path":"https://covr.r-lib.org/dev/reference/file_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A coverage report for a specific file — file_report","text":"x coverage dataset, defaults running package_coverage(). file file report , NULL, use first file coverage output. out_file output file browse whether open browser view report.","code":""},{"path":"https://covr.r-lib.org/dev/reference/function_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate test coverage for a specific function. — function_coverage","title":"Calculate test coverage for a specific function. — function_coverage","text":"Calculate test coverage specific function.","code":""},{"path":"https://covr.r-lib.org/dev/reference/function_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate test coverage for a specific function. — function_coverage","text":"","code":"function_coverage(fun, code = NULL, env = NULL, enc = parent.frame())"},{"path":"https://covr.r-lib.org/dev/reference/function_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate test coverage for a specific function. — function_coverage","text":"fun name function. code expressions run. env environment function defined . enc enclosing environment run expressions.","code":""},{"path":"https://covr.r-lib.org/dev/reference/function_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate test coverage for a specific function. — function_coverage","text":"","code":"add <- function(x, y) { x + y } function_coverage(fun = add, code = NULL) # 0% coverage function_coverage(fun = add, code = add(1, 2) == 3) # 100% coverage"},{"path":"https://covr.r-lib.org/dev/reference/gitlab.html","id":null,"dir":"Reference","previous_headings":"","what":"Run covr on package and create report for GitLab — gitlab","title":"Run covr on package and create report for GitLab — gitlab","text":"Utilize internal GitLab static pages publish package coverage. Creates local covr report package subdirectory. Uses pages GitLab job publish report.","code":""},{"path":"https://covr.r-lib.org/dev/reference/gitlab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run covr on package and create report for GitLab — gitlab","text":"","code":"gitlab(..., coverage = NULL, file = \"public/coverage.html\", quiet = TRUE)"},{"path":"https://covr.r-lib.org/dev/reference/gitlab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run covr on package and create report for GitLab — gitlab","text":"... arguments passed package_coverage() coverage existing coverage object submit, NULL, package_coverage() called arguments ... file report filename. quiet FALSE, print coverage submission.","code":""},{"path":"https://covr.r-lib.org/dev/reference/has_srcref.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the source bound to the expression — has_srcref","title":"Is the source bound to the expression — has_srcref","text":"source bound expression","code":""},{"path":"https://covr.r-lib.org/dev/reference/has_srcref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the source bound to the expression — has_srcref","text":"","code":"has_srcref(expr)"},{"path":"https://covr.r-lib.org/dev/reference/has_srcref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the source bound to the expression — has_srcref","text":"expr language object may srcref attribute","code":""},{"path":"https://covr.r-lib.org/dev/reference/has_srcref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the source bound to the expression — has_srcref","text":"logical value indicating whether language object source","code":""},{"path":"https://covr.r-lib.org/dev/reference/in_covr.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if code is being run in covr — in_covr","title":"Determine if code is being run in covr — in_covr","text":"covr functions set environment variable R_COVR running. in_covr() returns TRUE environment variable set FALSE otherwise.","code":""},{"path":"https://covr.r-lib.org/dev/reference/in_covr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if code is being run in covr — in_covr","text":"","code":"in_covr()"},{"path":"https://covr.r-lib.org/dev/reference/in_covr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine if code is being run in covr — in_covr","text":"","code":"if (require(testthat)) {   testthat::skip_if(in_covr()) } #> Loading required package: testthat"},{"path":"https://covr.r-lib.org/dev/reference/is_covr_count_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the expression a call to covr:::count — is_covr_count_call","title":"Is the expression a call to covr:::count — is_covr_count_call","text":"expression call covr:::count","code":""},{"path":"https://covr.r-lib.org/dev/reference/is_covr_count_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the expression a call to covr:::count — is_covr_count_call","text":"","code":"is_covr_count_call(expr)"},{"path":"https://covr.r-lib.org/dev/reference/is_covr_count_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the expression a call to covr:::count — is_covr_count_call","text":"expr language object","code":""},{"path":"https://covr.r-lib.org/dev/reference/is_covr_count_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the expression a call to covr:::count — is_covr_count_call","text":"logical value indicating whether object call covr:::count.","code":""},{"path":"https://covr.r-lib.org/dev/reference/is_current_test_finished.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns TRUE if we've moved on from test reflected in .current_test — is_current_test_finished","title":"Returns TRUE if we've moved on from test reflected in .current_test — is_current_test_finished","text":"Quickly dismiss need update current test can. test still last test, check srcref (call, source kept) exists last recorded calling frame prior entering covr trace. changed, comprehensive test see test call stack changed, case onto new test.","code":""},{"path":"https://covr.r-lib.org/dev/reference/is_current_test_finished.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns TRUE if we've moved on from test reflected in .current_test — is_current_test_finished","text":"","code":"is_current_test_finished()"},{"path":"https://covr.r-lib.org/dev/reference/key.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a key for a call — key","title":"Generate a key for a call — key","text":"Generate key  call","code":""},{"path":"https://covr.r-lib.org/dev/reference/key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a key for a call — key","text":"","code":"key(x)"},{"path":"https://covr.r-lib.org/dev/reference/key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a key for a call — key","text":"x srcref call create key ","code":""},{"path":"https://covr.r-lib.org/dev/reference/new_counter.html","id":null,"dir":"Reference","previous_headings":"","what":"initialize a new counter — new_counter","title":"initialize a new counter — new_counter","text":"initialize new counter","code":""},{"path":"https://covr.r-lib.org/dev/reference/new_counter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"initialize a new counter — new_counter","text":"","code":"new_counter(src_ref, parent_functions)"},{"path":"https://covr.r-lib.org/dev/reference/new_counter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"initialize a new counter — new_counter","text":"src_ref base::srcref() parent_functions functions srcref contained .","code":""},{"path":"https://covr.r-lib.org/dev/reference/new_test_counter.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a new test counter for a coverage trace — new_test_counter","title":"Initialize a new test counter for a coverage trace — new_test_counter","text":"Initialize test counter, matrix used tally tests, stack depth execution order trace associated key hit. test trace environment, allows assignment pre-allocated tests matrix minimall reallocation.","code":""},{"path":"https://covr.r-lib.org/dev/reference/new_test_counter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a new test counter for a coverage trace — new_test_counter","text":"","code":"new_test_counter(key)"},{"path":"https://covr.r-lib.org/dev/reference/new_test_counter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a new test counter for a coverage trace — new_test_counter","text":"key generated key()","code":""},{"path":"https://covr.r-lib.org/dev/reference/new_test_counter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize a new test counter for a coverage trace — new_test_counter","text":"tests matrix columns tests, depth , corresponding test index (index associated test .counters$tests), stack depth trace evaluated number traces hit far test evaluation.","code":""},{"path":"https://covr.r-lib.org/dev/reference/package_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate test coverage for a package — package_coverage","title":"Calculate test coverage for a package — package_coverage","text":"function calculates test coverage development package path. default runs package tests, can also run vignette example code.","code":""},{"path":"https://covr.r-lib.org/dev/reference/package_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate test coverage for a package — package_coverage","text":"","code":"package_coverage(   path = \".\",   type = c(\"tests\", \"vignettes\", \"examples\", \"all\", \"none\"),   combine_types = TRUE,   relative_path = TRUE,   quiet = TRUE,   clean = TRUE,   line_exclusions = NULL,   function_exclusions = NULL,   code = character(),   install_path = temp_file(\"R_LIBS\"),   ...,   exclusions,   pre_clean = TRUE )"},{"path":"https://covr.r-lib.org/dev/reference/package_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate test coverage for a package — package_coverage","text":"path file path package. type run package ‘tests’, ‘vignettes’, ‘examples’, ‘’, ‘none’. default ‘tests’. combine_types TRUE (default) coverage types simply summed one coverage object. FALSE separate objects used type coverage. relative_path whether output paths relative absolute paths. string, interpreted root path paths relative root. quiet whether load compile package quietly, useful debugging errors. clean whether clean temporary output files running, mainly useful debugging errors. line_exclusions named list files lines exclude file. function_exclusions vector regular expressions matching function names exclude. Example print\\\\\\. match print methods. code character vector additional test code run. install_path path instrumented package installed tests run . default path R sessions temporary directory. can sometimes useful set (along clean = FALSE) help debug test failures. ... Additional arguments passed tools::testInstalledPackage(). exclusions ‘Deprecated’, please use ‘line_exclusions’ instead. pre_clean whether delete objects present src directory recompiling","code":""},{"path":"https://covr.r-lib.org/dev/reference/package_coverage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate test coverage for a package — package_coverage","text":"function uses tools::testInstalledPackage() run code, like test package another way can set type = \"none\" pass code run character vector code parameter. Parallelized code using parallel's mcparallel() needs use patched parallel:::mcexit. done automatically package depends parallel, can also explicitly set using environment variable COVR_FIX_PARALLEL_MCEXIT global option covr.fix_parallel_mcexit.","code":""},{"path":[]},{"path":"https://covr.r-lib.org/dev/reference/percent_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide percent coverage of package — percent_coverage","title":"Provide percent coverage of package — percent_coverage","text":"Calculate total percent coverage coverage result object.","code":""},{"path":"https://covr.r-lib.org/dev/reference/percent_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide percent coverage of package — percent_coverage","text":"","code":"percent_coverage(x, ...)"},{"path":"https://covr.r-lib.org/dev/reference/percent_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide percent coverage of package — percent_coverage","text":"x coverage object returned package_coverage() ... additional arguments passed tally_coverage()","code":""},{"path":"https://covr.r-lib.org/dev/reference/percent_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide percent coverage of package — percent_coverage","text":"total percentage numeric(1).","code":""},{"path":"https://covr.r-lib.org/dev/reference/print.coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a coverage object — print.coverage","title":"Print a coverage object — print.coverage","text":"Print coverage object","code":""},{"path":"https://covr.r-lib.org/dev/reference/print.coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a coverage object — print.coverage","text":"","code":"# S3 method for class 'coverage' print(x, group = c(\"filename\", \"functions\"), by = \"line\", ...)"},{"path":"https://covr.r-lib.org/dev/reference/print.coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a coverage object — print.coverage","text":"x coverage object printed group whether group coverage filename function whether count coverage line expression ... additional arguments ignored","code":""},{"path":"https://covr.r-lib.org/dev/reference/print.coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a coverage object — print.coverage","text":"coverage object (invisibly).","code":""},{"path":"https://covr.r-lib.org/dev/reference/report.html","id":null,"dir":"Reference","previous_headings":"","what":"Display covr results using a standalone report — report","title":"Display covr results using a standalone report — report","text":"Display covr results using standalone report","code":""},{"path":"https://covr.r-lib.org/dev/reference/report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display covr results using a standalone report — report","text":"","code":"report(   x = package_coverage(),   file = file.path(tempdir(), paste0(get_package_name(x), \"-report.html\")),   browse = interactive() )"},{"path":"https://covr.r-lib.org/dev/reference/report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display covr results using a standalone report — report","text":"x coverage dataset, defaults running package_coverage(). file report filename. browse whether open browser view report.","code":""},{"path":"https://covr.r-lib.org/dev/reference/report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display covr results using a standalone report — report","text":"","code":"if (FALSE) { # \\dontrun{ x <- package_coverage() report(x) } # }"},{"path":"https://covr.r-lib.org/dev/reference/system_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a system command and check if it succeeds. — system_check","title":"Run a system command and check if it succeeds. — system_check","text":"function automatically quotes command argument properly protected shell expansion.","code":""},{"path":"https://covr.r-lib.org/dev/reference/system_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a system command and check if it succeeds. — system_check","text":"","code":"system_check(   cmd,   args = character(),   env = character(),   quiet = FALSE,   echo = FALSE,   ... )"},{"path":"https://covr.r-lib.org/dev/reference/system_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a system command and check if it succeeds. — system_check","text":"cmd command run. args vector command arguments. env named character vector environment variables.  quoted quiet TRUE, command output echoed. echo TRUE, command run echoed. ... additional arguments passed base::system()","code":""},{"path":"https://covr.r-lib.org/dev/reference/system_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a system command and check if it succeeds. — system_check","text":"TRUE command succeeds, error thrown command fails.","code":""},{"path":"https://covr.r-lib.org/dev/reference/system_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a system command and capture the output. — system_output","title":"Run a system command and capture the output. — system_output","text":"function automatically quotes command argument properly protected shell expansion.","code":""},{"path":"https://covr.r-lib.org/dev/reference/system_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a system command and capture the output. — system_output","text":"","code":"system_output(   cmd,   args = character(),   env = character(),   quiet = FALSE,   echo = FALSE,   ... )"},{"path":"https://covr.r-lib.org/dev/reference/system_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a system command and capture the output. — system_output","text":"cmd command run. args vector command arguments. env named character vector environment variables.  quoted quiet TRUE, command output echoed. echo TRUE, command run echoed. ... additional arguments passed base::system()","code":""},{"path":"https://covr.r-lib.org/dev/reference/system_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a system command and capture the output. — system_output","text":"command output command succeeds, error thrown command fails.","code":""},{"path":"https://covr.r-lib.org/dev/reference/tally_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Tally coverage by line or expression — tally_coverage","title":"Tally coverage by line or expression — tally_coverage","text":"Tally coverage line expression","code":""},{"path":"https://covr.r-lib.org/dev/reference/tally_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tally coverage by line or expression — tally_coverage","text":"","code":"tally_coverage(x, by = c(\"line\", \"expression\"))"},{"path":"https://covr.r-lib.org/dev/reference/tally_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tally coverage by line or expression — tally_coverage","text":"x coverage object returned package_coverage() whether tally coverage line expression","code":""},{"path":"https://covr.r-lib.org/dev/reference/tally_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tally coverage by line or expression — tally_coverage","text":"data.frame coverage tallied line expression.","code":""},{"path":"https://covr.r-lib.org/dev/reference/to_cobertura.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Cobertura XML file — to_cobertura","title":"Create a Cobertura XML file — to_cobertura","text":"Create cobertura-compliant XML report following DTD. two DTDs called coverage-04.dtd tools seem adhere either , parser using may balk file. Please see github discussion context. covr provide coverage metric (branch coverage, complexity), zero reported.","code":""},{"path":"https://covr.r-lib.org/dev/reference/to_cobertura.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Cobertura XML file — to_cobertura","text":"","code":"to_cobertura(cov, filename = \"cobertura.xml\")"},{"path":"https://covr.r-lib.org/dev/reference/to_cobertura.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Cobertura XML file — to_cobertura","text":"cov coverage object returned package_coverage() filename name Cobertura XML file","code":""},{"path":"https://covr.r-lib.org/dev/reference/to_cobertura.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Cobertura XML file — to_cobertura","text":"Note: functionality requires xml2 package installed.","code":""},{"path":"https://covr.r-lib.org/dev/reference/to_sonarqube.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SonarQube Generic XML file for test coverage according to https://docs.sonarqube.org/latest/analysis/generic-test/ Based on cobertura.R — to_sonarqube","title":"Create a SonarQube Generic XML file for test coverage according to https://docs.sonarqube.org/latest/analysis/generic-test/ Based on cobertura.R — to_sonarqube","text":"functionality requires xml2 package installed.","code":""},{"path":"https://covr.r-lib.org/dev/reference/to_sonarqube.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SonarQube Generic XML file for test coverage according to https://docs.sonarqube.org/latest/analysis/generic-test/ Based on cobertura.R — to_sonarqube","text":"","code":"to_sonarqube(cov, filename = \"sonarqube.xml\")"},{"path":"https://covr.r-lib.org/dev/reference/to_sonarqube.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SonarQube Generic XML file for test coverage according to https://docs.sonarqube.org/latest/analysis/generic-test/ Based on cobertura.R — to_sonarqube","text":"cov coverage object returned package_coverage() filename name SonarQube Generic XML file","code":""},{"path":"https://covr.r-lib.org/dev/reference/to_sonarqube.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a SonarQube Generic XML file for test coverage according to https://docs.sonarqube.org/latest/analysis/generic-test/ Based on cobertura.R — to_sonarqube","text":"Talkdesk Inc.","code":""},{"path":"https://covr.r-lib.org/dev/reference/trace_calls.html","id":null,"dir":"Reference","previous_headings":"","what":"trace each call with a srcref attribute — trace_calls","title":"trace each call with a srcref attribute — trace_calls","text":"function calls recursively can properly traverse AST.","code":""},{"path":"https://covr.r-lib.org/dev/reference/trace_calls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"trace each call with a srcref attribute — trace_calls","text":"","code":"trace_calls(x, parent_functions = NULL, parent_ref = NULL)"},{"path":"https://covr.r-lib.org/dev/reference/trace_calls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"trace each call with a srcref attribute — trace_calls","text":"x call parent_functions functions call child . parent_ref argument used set srcref current call recursion.","code":""},{"path":"https://covr.r-lib.org/dev/reference/trace_calls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"trace each call with a srcref attribute — trace_calls","text":"modified expression count calls inserted previous call.","code":""},{"path":[]},{"path":"https://covr.r-lib.org/dev/reference/truncate_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Truncate call objects to limit the number of arguments — truncate_call","title":"Truncate call objects to limit the number of arguments — truncate_call","text":"helper circumvent R errors deserializing large call objects Rds. Trims number arguments call object, replaces last argument <truncated> symbol.","code":""},{"path":"https://covr.r-lib.org/dev/reference/truncate_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Truncate call objects to limit the number of arguments — truncate_call","text":"","code":"truncate_call(call_obj, limit = 10000)"},{"path":"https://covr.r-lib.org/dev/reference/truncate_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Truncate call objects to limit the number of arguments — truncate_call","text":"call_obj (possibly large) call object limit call length limit impose","code":""},{"path":"https://covr.r-lib.org/dev/reference/truncate_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Truncate call objects to limit the number of arguments — truncate_call","text":"call_obj arguments trimmed","code":""},{"path":"https://covr.r-lib.org/dev/reference/update_current_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Update current test if unit test expression has progressed — update_current_test","title":"Update current test if unit test expression has progressed — update_current_test","text":"Updating test logs metadata regarding current call stack, noteably trying capture information call stack prior covr::count call traced.","code":""},{"path":"https://covr.r-lib.org/dev/reference/update_current_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update current test if unit test expression has progressed — update_current_test","text":"","code":"update_current_test()"},{"path":"https://covr.r-lib.org/dev/reference/update_current_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update current test if unit test expression has progressed — update_current_test","text":"couple patterns behavior, try accommodate variety testing suites: testthat: execution testthat's test_* functions, files sourced working directory temporarily changed package /tests directory. Knowing , calls call stack relative directory extracted recorded. RUnit: custom: custom test suites may source kept execution, case entire test call stack kept. checks see current call stack srcref (expression, source available) frame prior entering package covr:::count called.","code":""},{"path":"https://covr.r-lib.org/dev/reference/value.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the value from an object — value","title":"Retrieve the value from an object — value","text":"Retrieve value object","code":""},{"path":"https://covr.r-lib.org/dev/reference/value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the value from an object — value","text":"","code":"value(x, ...)"},{"path":"https://covr.r-lib.org/dev/reference/value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the value from an object — value","text":"x object retrieve value ... additional arguments passed methods","code":""},{"path":"https://covr.r-lib.org/dev/reference/zero_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide locations of zero coverage — zero_coverage","title":"Provide locations of zero coverage — zero_coverage","text":"examining test coverage package, useful know locations 0 test coverage.","code":""},{"path":"https://covr.r-lib.org/dev/reference/zero_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide locations of zero coverage — zero_coverage","text":"","code":"zero_coverage(x, ...)"},{"path":"https://covr.r-lib.org/dev/reference/zero_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide locations of zero coverage — zero_coverage","text":"x coverage object returned package_coverage() ... additional arguments passed tally_coverage()","code":""},{"path":"https://covr.r-lib.org/dev/reference/zero_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide locations of zero coverage — zero_coverage","text":"data.frame coverage data coverage 0.","code":""},{"path":"https://covr.r-lib.org/dev/reference/zero_coverage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Provide locations of zero coverage — zero_coverage","text":"used within RStudio function outputs results using Marker API.","code":""},{"path":"https://covr.r-lib.org/dev/news/index.html","id":"covr-development-version","dir":"Changelog","previous_headings":"","what":"covr (development version)","title":"covr (development version)","text":"covr now uses testthat::with_mocked_bindings() internal testing (@olivroy, #595). Fix R CMD check NOTE: non-API calls SET_BODY, SET_CLOENV, SET_FORMALS (@t-kalinowski, #587) Fix bug preventing package_coverage() running tests install_path set relative path (@gergness, #517, #548). Fixed performance regression error triggered change R 4.4.0. (@kyleam, #588) Fixed issue attempting generate code coverage already-loaded package fail Windows. (@kevinushey, #574) Prevent covr.record_tests option logging duplicate tests line testing code hit repeatedly, loop. (@dgkf, #528) Added support klmr/box modules. works best file_coverage(). (@radbasa, #491) Normalize install_path path creating directory prevent failures running covr subprocess using path Windows \\\\ path separators. (@maksymiuks, #592)","code":""},{"path":"https://covr.r-lib.org/dev/news/index.html","id":"covr-364","dir":"Changelog","previous_headings":"","what":"covr 3.6.4","title":"covr 3.6.4","text":"CRAN release: 2023-11-09 Fix failing test CRAN","code":""},{"path":"https://covr.r-lib.org/dev/news/index.html","id":"covr-363","dir":"Changelog","previous_headings":"","what":"covr 3.6.3","title":"covr 3.6.3","text":"CRAN release: 2023-10-10 Updates internal usage .atomic() work upcoming R release (@mmaechler , #542) package_coverage() now works correctly ignore files run package root directory (@mpadge, #538)","code":""},{"path":"https://covr.r-lib.org/dev/news/index.html","id":"covr-362","dir":"Changelog","previous_headings":"","what":"covr 3.6.2","title":"covr 3.6.2","text":"CRAN release: 2023-03-25","code":""},{"path":"https://covr.r-lib.org/dev/news/index.html","id":"covr-361","dir":"Changelog","previous_headings":"","what":"covr 3.6.1","title":"covr 3.6.1","text":"CRAN release: 2022-08-26 to_cobertura() now explicit doctype resulting XML. also sets source path recorded. (@mmyrte, #524) internal generic merge_coverage() now correctly registers S3 methods. internal test recording large calls longer assumes R system PATH.","code":""},{"path":"https://covr.r-lib.org/dev/news/index.html","id":"covr-360","dir":"Changelog","previous_headings":"","what":"covr 3.6.0","title":"covr 3.6.0","text":"CRAN release: 2022-08-24 Added covr.record_tests option. TRUE, enables recording trace tests executed adds itemization tests result execution trace. details see ?covr.record_tests (@dgkf, #463, #485, #503) .data.frame() now returns 0 row data frame functions package (#427) codecov() now robust coverage output package_coverage() token provided (#456) package_coverage(code = ) now accepts character vectors length greater 1 (@bastistician, #481) package_coverage() now handles packages install render time examples (#488) package_coverage() now sets environment variable R_TESTS tests-startup.R file like R CMD check (#420) report() now provides detailed error message DT htmltools dependencies installed (#500). Fix parse_gcov bug package stored directory regex special characters, see #459 Error/warning thrown , respectively, missing gcov empty parsed gcov output (@stephematician, #448) Support Google Cloud Build uploading reports Codecov.io (@MarkEdmondson1234 #469) covr now licensed MIT (#454)","code":""},{"path":"https://covr.r-lib.org/dev/news/index.html","id":"covr-351","dir":"Changelog","previous_headings":"","what":"covr 3.5.1","title":"covr 3.5.1","text":"CRAN release: 2020-09-16 Generated files cpp11 now ignored (#437) codecov() coveralls() now retry failed requests raising error (#428, @jameslamb)","code":""},{"path":"https://covr.r-lib.org/dev/news/index.html","id":"covr-350","dir":"Changelog","previous_headings":"","what":"covr 3.5.0","title":"covr 3.5.0","text":"CRAN release: 2020-03-06 codecov() now supports GitHub Actions public repositories without specify token. New to_sonarqube() function added support SonarQube generic XML format (@nibant, @Delfic, #413).","code":""},{"path":"https://covr.r-lib.org/dev/news/index.html","id":"covr-340","dir":"Changelog","previous_headings":"","what":"covr 3.4.0","title":"covr 3.4.0","text":"CRAN release: 2019-11-26 codecov() now supports GitHub Actions. New in_covr() function added return true code run covr (#407). file_coverage(), environment_coverage() function_coverage() now set R_COVR=true, consistent package_coverage() (#407)","code":""},{"path":"https://covr.r-lib.org/dev/news/index.html","id":"covr-332","dir":"Changelog","previous_headings":"","what":"covr 3.3.2","title":"covr 3.3.2","text":"CRAN release: 2019-10-16 Fix test failures development version R (4.0.0) (#400)","code":""},{"path":"https://covr.r-lib.org/dev/news/index.html","id":"covr-331","dir":"Changelog","previous_headings":"","what":"covr 3.3.1","title":"covr 3.3.1","text":"CRAN release: 2019-08-23 Fix inadvertent regression return visibility functions covered. covr versions prior 3.3.0 surrounded statement { blocks. covr 3.3.0 switched using ({, caused inadvertent regression, ( make result visible last expression function. Using (TRUE) { restores previous behavior. (#391, #392)","code":""},{"path":"https://covr.r-lib.org/dev/news/index.html","id":"covr-330","dir":"Changelog","previous_headings":"","what":"covr 3.3.0","title":"covr 3.3.0","text":"CRAN release: 2019-08-06","code":""},{"path":"https://covr.r-lib.org/dev/news/index.html","id":"new-features-3-3-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"covr 3.3.0","text":"New azure() function added make easy use covr Azure Pipelines (#370) Work around issues related new curly curly syntax rlang (#379, #377, rlang#813) Compiled code coverage improved, particular C++ templates now contain merged coverage template instances, even instances defined separate compilation units. (#390)","code":""},{"path":"https://covr.r-lib.org/dev/news/index.html","id":"bugfixes-and-minor-improvements-3-3-0","dir":"Changelog","previous_headings":"","what":"Bugfixes and minor improvements","title":"covr 3.3.0","text":"codecov() now includes support flags field (#365) codecov now looks codecov.yml token CODECOV_TOKEN envvar set (@MishaCivey #349). per_line() now track lines punctuation } { (#387) tally_coverage() now includes compiled code, like previously (#384) Define necessary coverage flags C++14, C++17 C++20 (#369). to_cobertura() now works Cobertura coverage-04.dtd (@samssann, #337). R6 class generators prefixed . now included coverage results (@jameslamb, #356). package_coverage() gains option pre_clean, set FALSE disable cleaning existing objects running package_coverage() (@jpritikin, #375)","code":""}]
